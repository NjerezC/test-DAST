# Node.js
# Build a general Node.js project with npm.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/javascript

trigger:
- master

pool:
  vmImage: 'ubuntu-latest'

steps:
- task: NodeTool@0
  inputs:
    versionSpec: '10.x'
  displayName: 'Install Node.js'

- task: SonarQubePrepare@4
  inputs:
    SonarQube: 'SonarQube Openshift'
    scannerMode: 'CLI'
    configMode: 'file'
    extraProperties: |
      # Additional properties that will be passed to the scanner, 
      # Put one key=value per line, example:
      sonar.login=admin
      sonar.password=admin
      sonar.projectKey=angular:angular-example
      # sonar.exclusions=**/*.bin

- task: SonarQubeAnalyze@4

- task: DeleteFiles@1
  displayName: 'Eliminar JUnit files'
  inputs:
    SourceFolder: '$(System.DefaultWorkingDirectory)/junit'
    Contents: 'TESTS*.xml'

- script: |
    npm install          
  displayName: 'Instalar npm'

- task: Npm@1
  displayName: 'Lint Angular (typeScript)'
  inputs:
    command: 'custom'
    workingDir: '$(System.DefaultWorkingDirectory)/src'
    customCommand: 'run lint --  --format=stylish'

- task: Npm@1
  displayName: 'Test Angular Cobertura'
  inputs:
    command: 'custom'
    workingDir: 'src'
    customCommand: 'run test -- --watch=false --code-coverage'

- task: PublishCodeCoverageResults@1
  displayName: 'Publish code coverage Angular results'
  condition: succeededOrFailed()
  inputs:
    codeCoverageTool: 'Cobertura'
    summaryFileLocation: 'src/coverage/cobertura-coverage.xml'
    reportDirectory: 'src/coverage'
    failIfCoverageEmpty: true

- task: PublishTestResults@2
  displayName: 'Publish Angular test results'
  condition: succeededOrFailed()
  inputs:
    searchFolder: $(System.DefaultWorkingDirectory)/junit
    testRunTitle: Angular
    testResultsFormat: JUnit
    testResultsFiles: "**/TESTS*.xml"
    
- task: Npm@1
  displayName: 'E2E Test Angular'
  inputs:
    command: custom
    customCommand: run e2e
    workingDir: src

- task: JenkinsQueueJob@2
  inputs:
    serverEndpoint: 'Jenkins Poc Masisa'
    jobName: 'new_pipeline_qtest_demo'
    captureConsole: true
    capturePipeline: true
    isParameterizedJob: false

- task: PublishTestResults@2
  displayName: 'Publish Angular E2E test results'
  condition: succeededOrFailed()
  inputs:
    searchFolder: $(System.DefaultWorkingDirectory)/e2e/junit
    testRunTitle: Angular_E2E
    testResultsFormat: JUnit
    testResultsFiles: "**/junit*.xml"

- script: |
    npm run build  
  displayName: 'Construir Aplicaci√≥n (Build)'

- task: Bash@3
  inputs:
    targetType: 'inline'
    script: 'jar -cvf angularUI.war *'
    workingDirectory: 'dist/'    

- task: PublishBuildArtifacts@1
  inputs:
    PathtoPublish: 'dist/'
    ArtifactName: 'angular-example'
    publishLocation: 'Container'
  displayName: 'Publish Artifacts'